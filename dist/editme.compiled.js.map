{"version":3,"sources":["../src/editme.js"],"names":[],"mappings":"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","file":"editme.compiled.js","sourcesContent":["(function (root, factory) {\n  // AMD\n  if (typeof define === 'function' && define.amd) {\n    define(['angular'], function (angular) {\n      return factory(angular);\n    });\n  }\n  // Node.js\n  else if (typeof exports === 'object') {\n    module.exports = factory(require('angular'));\n  }\n  // Angular\n  else if (angular) {\n    factory(root.angular);\n  }\n}(window, function (angular) {\n  'use strict';\n\n  let m = angular.module('shaka-editme', []);\n\n  /**\n   * Component wrapper for SVG edit icon\n   */\n  m.component('skEditmeIcon', {\n    template: `\n      <div class=\"icon-wrapper\">\n        edit-icon\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n          <path d=\"M30.173 7.542l-0.314 0.314-5.726-5.729 0.313-0.313c0 0 1.371-1.813 3.321-1.813 0.859 0 1.832 0.353 2.849 1.37 3.354 3.354-0.443 6.171-0.443 6.171zM27.979 9.737l-19.499 19.506-8.48 2.757 2.756-8.485v-0.003h0.002l19.496-19.505 0.252 0.253zM2.76 29.239l4.237-1.219-2.894-3.082-1.343 4.301z\"></path>\n        </svg>\n      </div>\n    `\n  })\n\n\n  m.directive('skEditme', ($compile, $timeout) => {\n    let directive = {\n      scope : {\n        isEditing: '=?',\n        hideIcon: '<?',\n        submitOnEnterKey: '<?',\n        submitOnBlur: '<?',\n        onStateChange: '&?',\n        onInvalid: '&?',\n        onChange: '&?'\n      },\n      controller: function($scope) {\n        $scope.toggleEdit = (value) => {\n          $scope.isEditing = typeof value !== 'undefined' ? Boolean(value) : !$scope.isEditing;\n        };\n      },\n      link: link,\n      transclude: {\n        static: '?static',\n        editable: '?editable'\n      },\n      template: `\n        <div ng-click=\"toggleEdit(true)\" ng-class=\"{'editme-touch': isTouchEnabled}\">\n          <span ng-hide=\"isEditing\" class=\"model-wrapper\" ng-class=\"{'hide-icon': hideIcon}\">\n            <span class=\"model-content\" ng-transclude=\"static\">{{model}}</span>\n            <sk-editme-icon ng-if=\"!isEditing && !hideIcon\"></sk-editme-icon>\n          </span>\n          <div ng-transclude=\"editable\" ng-show=\"isEditing\"></div>\n        </div>\n      `\n    };\n\n    return directive;\n\n    function link(scope, element, attrs, ctrl, transclude) {\n      let $input    = undefined;\n      let ngModel   = undefined;\n      let prevValue = undefined;\n      const KEYS    = {\n        ENTER: 13\n      };\n      const VALID_ELEMENTS = [\n        'input[type=\"text\"]',\n        'input[type=\"url\"]',\n        'input[type=\"date\"]',\n        'input[type=\"email\"]',\n        'input[type=\"week\"]',\n        'input[type=\"month\"]',\n        'input[type=\"number\"]',\n        'input[type=\"time\"]',\n        'textarea'\n      ];\n\n      if ('ontouchstart' in document.documentElement) {\n        scope.isTouchEnabled = true;\n      }\n\n      scope.submitOnEnterKey = typeof scope.submitOnEnterKey !== 'undefined' ? scope.submitOnEnterKey : true;\n      scope.submitOnBlur = typeof scope.submitOnBlur !== 'undefined' ? scope.submitOnBlur : true;\n\n      $timeout(() => {\n        // This will ensure only valid elements are matched\n        let input = element[0].querySelectorAll(VALID_ELEMENTS.join(','));\n\n        if (input.length !== 1) {\n          throw new Error('skEditme could not find valid input or textarea element. Please see docs for valid element types.');\n        }\n\n        $input = angular.element(input[0]);\n        ngModel = $input.controller('ngModel');\n\n        // Throw error/warning if invalid element provided\n        if (angular.isUndefined(ngModel)) {\n          throw new Error('skEditme transcluded element is missing required ng-model directive');\n        }\n\n        // If the submitOnBlur is disabled, activate the submit button\n        if (scope.submitOnBlur === false) {\n          let submit = element[0].querySelectorAll('button[type=\"submit\"]');\n          if (submit.length !== 1) {\n            throw new Error('skEditme could not find a valid submit button near ' + input[0].outerHTML);\n          } else {\n            angular.element(submit[0]).on('click', validate);\n          }\n        }\n\n        // ngModel.$modelView will be initialized as NaN\n        // This ensures we don't initiate our scope.model with NaN\n        let disconnect = scope.$watch(() => ngModel.$modelValue, (value) => {\n          // isNaN doesn't work see http://stackoverflow.com/questions/2652319/how-do-you-check-that-a-number-is-nan-in-javascript\n          let isNotNum = (value !== value);\n\n          if (!isNotNum) {\n            scope.model = value;\n            scope.$watch(() => scope.isEditing, onIsEditingChange);\n            disconnect();\n          }\n        });\n\n        ngModel.$viewChangeListeners.push(() => {\n          scope.model = ngModel.$modelValue\n        });\n      });\n\n      function onIsEditingChange(value) {\n        if (value) {\n          $timeout(() => $input[0].focus());\n          prevValue = angular.copy(scope.model);\n          $input.on('blur keypress', validate);\n        }\n        else {\n          $input.off('blur keypress', validate);\n        }\n\n        if (scope.onStateChange && value !== undefined) {\n          scope.onStateChange({$isEditing: angular.copy(value)});\n        }\n\n        if (scope.onChange &&\n            value === false &&\n            prevValue !== undefined &&\n            prevValue !== scope.model) {\n          scope.onChange({$value: angular.copy(scope.model)});\n        }\n      }\n\n      function validate(evt) {\n        if ((scope.submitOnBlur && evt.type === 'blur') ||\n            (!scope.submitOnBlur && evt.type === 'click') ||\n            (scope.submitOnEnterKey && evt.keyCode === KEYS.ENTER)) {\n          evt.stopPropagation();\n          scope.isEditing = ngModel.$invalid && ngModel.$dirty;\n          scope.$apply();\n\n          if (ngModel.$error && scope.onInvalid) {\n            scope.onInvalid({$error: angular.copy(ngModel.$error)});\n          }\n        }\n      }\n    }\n  });\n\n  return m.name;\n}));\n"]}